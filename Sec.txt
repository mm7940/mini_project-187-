package com.scb.axessspringboottraining.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

@Configuration
public class SecurityConfig {

    /**
     * ✅ Allow public access to /api/auth/** and Swagger URLs.
     * Disable CSRF for simplicity (only for development use).
     */
    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            .csrf(csrf -> csrf.disable()) // disable CSRF for Swagger / Postman
            .authorizeHttpRequests(auth -> auth
                .requestMatchers(
                        "/api/auth/**",             // public endpoints
                        "/v3/api-docs/**",          // swagger endpoints
                        "/swagger-ui/**",
                        "/swagger-ui.html"
                ).permitAll()
                .anyRequest().authenticated()     // everything else requires authentication
            );

        return http.build();
    }

    /**
     * ✅ Bean for password encryption using BCrypt.
     */
    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }
}
